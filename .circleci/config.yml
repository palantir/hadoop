version: 2

defaults: &defaults
  docker:
    - image: palantirtechnologies/circle-hadoop-3
  resource_class: xlarge
  environment: &defaults-environment
    TERM: dumb

all-branches-and-tags: &all-branches-and-tags
  filters:
    # run on all branches and tags
    tags:
      only: /.*/

deployable-branches-and-tags: &deployable-branches-and-tags
  filters:
    tags:
      only: /[0-9]+(?:\.[0-9]+){2,}-palantir\.[0-9]+(?:\.[0-9]+)*/
    branches:
      only: avoid-duplicate-publishes

step_templates:
  restore-maven-dependency-cache: &restore-maven-dependency-cache
    restore_cache:
      keys:
        - maven-dependency-cache-{{ checksum "pom.xml" }}
        # Fallback - see https://circleci.com/docs/2.0/configuration-reference/#example-2
        - maven-dependency-cache-
  checkout-code: &checkout-code
    run:
      name: Checkout code
      command: |
        # Copy of circle's checkout command with fix for fetching tags from
        # https://discuss.circleci.com/t/fetching-circle-tag-doesnt-seem-to-work/19014/2

        # Workaround old docker images with incorrect $HOME
        # check https://github.com/docker/docker/issues/2968 for details
        if [ "${HOME}" = "/" ]
        then
          export HOME=$(getent passwd $(id -un) | cut -d: -f6)
        fi

        mkdir -p ~/.ssh

        echo 'github.palantir.build ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCZqCCblwTe9+J3bttI7Hvm7rpFw330WIlsTxx6EFejUS3jqdxb2fYCrbutQCWJgyXEvrJqEu8D0tYwXklAEflUNajrGLdNt4e1HKuIcmH8FSN5Y6JioVBgew8COJUwj4IKOedXh67QV8qH8+OtkR0TkqSjXWx+p7Fynyl09indGyNswEgYfmOsWfTDFft2SwlwVg9DrMZn35b97kIXayDCv5JaTVgXYspVXEuoEd32lBFpM0fSoCBKxWMoAoKJbGtgxdisQ3kxigD2J3Z+lLBWB/j5T4ay5xceIvgyI/Cv+nQFWseEsKy72Q3M0Z9reyN5uUyzvQRrBCaxy+fE0Qex' >> ~/.ssh/known_hosts

        (umask 077; touch ~/.ssh/id_rsa)
        chmod 0600 ~/.ssh/id_rsa
        (cat <<EOF > ~/.ssh/id_rsa
        $CHECKOUT_KEY
        EOF
        )

        # use git+ssh instead of https
        git config --global url."ssh://git@github.com".insteadOf "https://github.com" || true

        if [ -e /home/circleci/project/.git ]
        then
          cd /home/circleci/project
          git remote set-url origin "$CIRCLE_REPOSITORY_URL" || true
        else
          mkdir -p /home/circleci/project
          cd /home/circleci/project
          git clone "$CIRCLE_REPOSITORY_URL" .
        fi

        if [ -n "$CIRCLE_TAG" ]
        then
          git fetch origin "+refs/tags/${CIRCLE_TAG}:refs/tags/${CIRCLE_TAG}"
        else
          git fetch origin "+${CIRCLE_BRANCH}:remotes/origin/${CIRCLE_BRANCH}"
        fi


        if [ -n "$CIRCLE_TAG" ]
        then
          git reset --hard "$CIRCLE_SHA1"
          git checkout -q "$CIRCLE_TAG"
        elif [ -n "$CIRCLE_BRANCH" ]
        then
          git reset --hard "$CIRCLE_SHA1"
          git checkout -q -B "$CIRCLE_BRANCH"
        fi

        git reset --hard "$CIRCLE_SHA1"

jobs:
  build-maven:
    <<: *defaults
    steps:
      - *checkout-code
      - run: palantir/set_version_and_package.sh
      - save_cache:
          key: maven-dependency-cache-{{ checksum "pom.xml" }}
          paths:
            - "~/.m2"
      - persist_to_workspace:
          root: .
          paths: 'local_deploy/'            

  run-tests:
    <<: *defaults
    resource_class: xlarge
    parallelism: 5
    steps:
      - *checkout-code
      - attach_workspace:
          at: .
      - *restore-maven-dependency-cache
      - run:
          name: Run all tests
          command: |
            case $CIRCLE_NODE_INDEX in
              0)
                cd hadoop-common-project && mvn test --fail-never
                ;;
              1)
                cd hadoop-hdfs-project && mvn test --fail-never -pl '!hadoop-hdfs'
                ;;
              2)
                cd hadoop-mapreduce-project && mvn test --fail-never
                ;;
              3)
                cd hadoop-tools && mvn test --fail-never
                ;;
              4)
                cd hadoop-yarn-project && mvn test --fail-never
                ;;
            esac
          no_output_timeout: 15m
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit

  deploy:
    <<: *defaults
    steps:
      - *checkout-code
      - attach_workspace:
          at: .
      - *restore-maven-dependency-cache
      - deploy:
          command: palantir/publish.sh

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build-maven:
          <<: *all-branches-and-tags
      - run-tests:
          requires:
            - build-maven
          <<: *all-branches-and-tags
      - deploy:
          requires:
            - build-maven
          <<: *deployable-branches-and-tags
